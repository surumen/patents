{"version":3,"sources":["components/Intro.js","components/Header.js","components/PatentsGrid.js","components/Charts.js","App.js","serviceWorker.js","index.js"],"names":["Intro","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","Component","Header","id","version","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","dangerouslySetInnerHTML","__html","transform","href","PatentsGrid","_this","pageChange","event","setState","skip","page","take","state","patents","sort","field","dir","isLoading","error","_this2","fetch","then","response","json","responseJson","_embedded","catch","console","_this3","_this$state","message","es_main","data","orderBy","slice","sortable","resizable","total","length","pageable","onPageChange","onSortChange","e","title","width","minResizableWidth","Charts","App","react","components_Header","components_Intro","components_PatentsGrid","components_Charts","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dae2760a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport '../assets/main.css';\n\nclass Intro extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <section className=\"bluebg notp\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-lg-12 intro\">\n              <h1>Patent Applications from the USPTO Database</h1>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Intro;","import React, { Component } from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport '../assets/main.css';\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <header className=\"bluebg\" id=\"top\">\n        <div className=\"container-fluid\">\n          <nav className=\"row\">\n            <div className=\"col-xs-6 col-lg-12 logo\">\n              <svg version={1.0} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 400 64\" style={{enableBackground: 'new 0 0 400 64'}} xmlSpace=\"preserve\">\n                <defs><style dangerouslySetInnerHTML={{__html: \".cls-1{font-size:60px;fill:#fff;font-family:GoogleSans-Bold, Google Sans;font-weight:700;}.cls-2{letter-spacing:-0.01em;}.cls-3{letter-spacing:-0.02em;}.cls-4{letter-spacing:-0.02em;}.cls-5{letter-spacing:0.01em;}.cls-6{letter-spacing:0em;}.cls-7{letter-spacing:-0.03em;}\" }} /></defs><title>logo</title><text className=\"cls-1\" transform=\"translate(0 51.48)\">p<tspan className=\"cls-2\" x=\"37.62\" y={0}>a</tspan><tspan className=\"cls-3\" x=\"70.74\" y={0}>t</tspan><tspan x=\"94.8\" y={0}>e</tspan><tspan className=\"cls-4\" x=\"130.02\" y={0}>n</tspan><tspan className=\"cls-5\" x=\"164.52\" y={0}>t</tspan><tspan className=\"cls-6\" x=\"190.14\" y={0}>se</tspan><tspan x=\"256.14\" y={0}>a</tspan><tspan className=\"cls-7\" x=\"289.8\" y={0}>r</tspan><tspan x=\"313.68\" y={0}>ch</tspan></text>\n              </svg>\n            </div>\n            <div className=\"col-lg-8 visible-lg main-nav\">\n              <ul>\n                <li><a href=\"http://patentsapi-dev.us-east-2.elasticbeanstalk.com/\">About this service</a></li>\n                <li><a href=\"http://patentsapi-dev.us-east-2.elasticbeanstalk.com/\">Developers</a></li>\n                <li><a href=\"http://patentsapi-dev.us-east-2.elasticbeanstalk.com/\">Workflow</a></li>\n                <li><a href=\"http://patentsapi-dev.us-east-2.elasticbeanstalk.com/\">API Documentation</a></li>\n              </ul>\n            </div>\n            <div className=\"col-xs-6 col-lg-4 sec-nav text-right\">\n              <ul>\n                <li><a href=\"#viewpatents\">Search Patent Applications</a></li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\n\nimport { orderBy } from '@progress/kendo-data-query';\n\nimport '../assets/style.css';\n\nconst API = 'http://localhost:5000/api/patents/';\n\nconst columns = [\n {\n  name: \"applicationNumber\",\n  label: \"Application Number\",\n  options: {\n   filter: true,\n   sort: true,\n  }\n },\n {\n  name: \"applicationType\",\n  label: \"Application Type\",\n  options: {\n   filter: true,\n   sort: true,\n  }\n },\n {\n  name: \"applicant\",\n  label: \"Applicant\",\n  options: {\n   filter: true,\n   sort: true,\n  }\n },\n {\n  name: \"inventor\",\n  label: \"Inventor\",\n  options: {\n   filter: true,\n   sort: true,\n  }\n },\n {\n  name: \"assignee\",\n  label: \"Assignee\",\n  options: {\n   filter: true,\n   sort: true,\n  }\n },\n {\n  name: \"title\",\n  label: \"Title\",\n  options: {\n   filter: false,\n   sort: true,\n  }\n },\n {\n  name: \"year\",\n  label: \"Year\",\n  options: {\n   filter: true,\n   sort: true,\n  }\n },\n];\n\n\nclass PatentsGrid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      patents: [],\n      sort: [\n            { field: 'applicationNumber', dir: 'asc' },\n            { field: 'year', dir: 'asc' }\n      ],\n      skip: 0, \n      take: 10,\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount(){\n    return fetch(API)\n      .then((response) => response.json())\n      .then((responseJson) => {\n\n        this.setState({\n          isLoading: false,\n          patents: responseJson._embedded.patents,\n        }, function(){\n\n        });\n\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n\n  pageChange = (event) => {\n        this.setState({\n            skip: event.page.skip,\n            take: event.page.take\n        });\n  }\n\n  render() {\n    const { patents, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n\n    return (\n      <Grid\n        // style={{ height: '400px' }}\n        data={orderBy(patents.slice(this.state.skip, \n          this.state.take + this.state.skip), \n          this.state.sort)}\n        sortable\n        resizable\n        sort={this.state.sort}\n        skip={this.state.skip}\n        take={this.state.take}\n        total={patents.length}\n        pageable={true}\n        onPageChange={this.pageChange}\n        onSortChange={(e) => {\n            this.setState({\n                sort: e.sort\n            });\n        }}\n    >\n        <Column field=\"applicationNumber\" title=\"Application Number\" width=\"200px\" minResizableWidth=\"200\"/>\n        <Column field=\"applicant\" title=\"Applicant\" width=\"180px\" minResizableWidth=\"180\"/>\n        <Column field=\"title\" title=\"Title\" />\n        <Column field=\"assignee\" title=\"Assignee\" width=\"180px\" minResizableWidth=\"180\"/>\n        <Column field=\"year\" title=\"Year\" width=\"100px\" minResizableWidth=\"100\"/>\n    </Grid>\n    );\n  }\n}\n\nexport default PatentsGrid;","import React, { Component } from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport '../assets/main.css';\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <section className=\"distribution\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-lg-4\"><h3 className=\"xsmall bt\">Data Summary</h3><span id=\"location\">Patent Status Distribution</span></div>\n            <div className=\"col-lg-4\"><h3 className=\"xsmall bt\">Distribution by Assignee(s)</h3><span id=\"blcount\">chart.js</span></div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Charts;","import React, { Fragment, Component } from 'react';\n\nimport Intro from './components/Intro';\nimport Header from './components/Header';\nimport PatentsGrid from './components/PatentsGrid';\nimport Charts from './components/Charts';\n\nimport './assets/main.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Intro />\n        <section>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-lg-6\"><h2>All Patent Applications</h2></div>\n            </div>\n          </div>\n          <div className=\"container-fluid spb\">\n            <div className=\"row\">\n              <PatentsGrid />\n            </div>\n          </div>\n        </section>\n        <Charts />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}